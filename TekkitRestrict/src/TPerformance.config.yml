##################################################################################
## Configuration file for TekkitRestrict                                        ##
## Authors: Taeir, DreadEnd (aka DreadSlicer)                                   ##
## BukkitDev: http://dev.bukkit.org/server-mods/tekkit-restrict/                ##
## Please ask questions/report issues on the BukkitDev page.                    ##
##################################################################################

##################################################################################
################################# ChunkUnloader ##################################
##################################################################################
# WARNING: Use with caution. If you turn this on, it MAY lag your server.
# This will be very useful for preventing your server from getting over 30,000
# chunks.
#
# There is a bug with the Normal Tekkit server in which the server gains "Trash"
# in the memory from disposing of chunks. I recommend keeping your MaxChunks
# around 3000-4000 to prevent this from disabling your server over time.
# (MCPCSpout does not have this problem)
#
# If you lower it below 1000, you have a chance of lagging your server by player
# movements.
UseChunkUnloader: true

# The maximal amount of chunks loaded at a time. If this amount is exceeded,
# chunks will be forcefully unloaded (even if they have chunk loaders) to clear
# RAM.
# The more players you have on the server, the higher you should set this to.
MaxChunks:
    # Max number of chunks for the End.
    # Recommended: 100-400 (the End is usually not a often visited place)
    # Default: 200
    TheEnd: 200
    
    # Max number of chunks for the Nether.
    # Recommended: 300-600 (depends on how many players live in the Nether)
    # Default: 400
    Nether: 400
    
    # Max number of chunks for normal type worlds.
    # Recommended: (Server RAM in GB)*700 to (Server RAM in GB)*900
    # Default: 4000
    Normal: 4000
    
    # Max number of chunks loaded in total (all worlds)
    # If this number is exceeded, the UnloadOrder will come in effect.
    # Recommended: (Server RAM in GB)*700 to (Server RAM in GB)*900
    # Default: 4000
    Total: 4000

# UnloadOrder
# The order in which chunks from worlds will be unloaded when the total number
# of chunks is exceeded.
# 0 - The End, Nether, Normal worlds    (default)
# 1 - Nether, The End, Normal worlds
#
# 2 - Normal worlds, The End, Nether    (not recommended)
# 3 - The End, Normal worlds, Nether    (not recommended)
#
# 4 - Nether, Normal worlds, The End    (not recommended)
# 5 - Normal worlds, Nether, The End    (not recommended)
#
# 2 and 3 are not recommended unless your main world is a Nether world.
# 4 and 5 are not recommended unless your main world is an End world.
#
# It is recommended to put the least used world first.
UnloadOrder: 0

# The maximal amount of chunks loaded per player.
# If MaxChunksPerPlayer is 100 and you have 10 players on your server, the max
# number of chunks will be 1000.
#
# NOTE: This feature has not been implemented (yet).
# MaxChunksPerPlayer: 100

# The radius of blocks that should stay loaded around a player.
# The ChunkUnloader will not unload chunks that are within this radius to a
# player.
# Minecraft's default is 256 blocks (16 chunks).
# 
# Recommended: 128-256
# Default: 256 
MaxRadii: 256

##################################################################################
############################ Threading Configuration #############################
##################################################################################

# Do not edit these values unless you know what you are doing.
# These numbers are in Milliseconds. (1000 milliseconds = 1 second)
# NOTE: the faster you set this to, your server is more likely to lag out.

# The amount of time the thread that disables GemArmor powers (see
# ModModifications config) sleeps for.
# If you set this too high, players might be able to use their powers by spamming.
# If you set this too low, it might lag the server.
#
# Recommended: [100-200]
# Default: 120
GemArmorDThread: 120

# The amount of time the thread that removes entities in SafeZones powers (see
# SafeZones config) sleeps for.
# If removing entities from a SafeZones is not something that is very important
# for your server, you can raise this to 1000-2000 (1-2 seconds)
#
# Recommended: [350-2000]
# Default: 350
SSEntityRemoverThread: 350

# The amount of time the inventory thread sleeps for.
# The inventory thread takes care of removing DisabledItems,
# Decharging EE Tools and Applying the Max EU values.
#
# Recommended: [250-500]
# Default: 400
InventoryThread: 400

# The amount of time the WorldCleanerThread sleeps for.
# This thread takes care of the ChunkUnloader and the WorldScrubber
#
# Recommended: [30000-90000]
# Default: 60000
WorldCleanerThread: 60000

# The amount of time the AutoSave Thread sleeps for.
# This thread makes sure that all information is correctly saved to the database.
# In case of a crash, you will only lose any data that has been modified within
# the sleep time of this thread. (e.g. if you set this to 11000, you will only
# lose data changed within 11 seconds before the crash)
#
# Recommended: [10000-30000]
# Default: 11000
AutoSaveThreadSpeed: 11000

# Runs a thread for each player upon the Inventory Thread tick.
# (May take up some processor if you have a ton of players)
#
# NOTE: currently unused
# ThrottleInventoryThread: false

##################################################################################
##################################################################################
##################################################################################



##	Inventory thread enables:    [DisableItems, CreativeDisable, MaxEU, EEDecharger, EEMaxCharger (~198-5000x)]
##	WorldCleaner thread enables: [ChunkUnloader, DisabledItemBlockRemover (~40-Xx)]
##	AutoSave thread enables:     [SaveToSQL, BlockLimiter RemoveBlk (~8+x)]

##################################################################################